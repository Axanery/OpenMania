class LightBulb {
    event Create() {
        if (this.PropertyExists("filter") && !(this.PropertyGet("filter") & Mode_MANIA)) {
            this.Active = false;
            return;
        }

        // Load
        this.Sprite = Resources.LoadSprite("Sprites/MSZ/LightBulb.bin", SCOPE_GAME);
        this.SFX_BulbPop = Resources.LoadSound("SoundFX/Stage/BulbPop.wav", SCOPE_GAME);
        this.Status = null;

        // Setup
        this.Respawn = 0;
        this.PriorityFlag = 0;
        if (this.PropertyExists("respawn"))
            this.Respawn = this.PropertyGet("respawn");
        if (this.PropertyExists("priority"))
            this.PriorityFlag = this.PropertyGet("priority");

        if (this.PriorityFlag)
            this.Priority = DrawGroup_FGLow_Low;
        else
            this.Priority = DrawGroup_FGHigh_High;

        // Initial Status
        this.SetAnimation(0, 0);
        this.HitboxW = this.HitboxH = 24.0; // Might be 24.0 for LightBulb

        this.OnScreenHitboxW = this.OnScreenHitboxH = 48.0;
    }

    event Update() {
        if (!this.InView(0, this.X - this.HitboxW / 2.0, this.Y - this.HitboxH / 2.0, this.HitboxW, this.HitboxH))
            return;

        if (this.CollidedWithObject("Player")) {
            // Hurt
            if (other.CurrentAnimation == 18)
                return;

            // Spawn explosion here, grey smoke puff
            // Spawn confetti particles
            var playerAnim = other.CurrentAnimation;
            if (playerAnim != 48 && playerAnim != 51) {
                var playerStatus = other.Status;
                if (playerStatus != other.Player_StatusTails_Flying) {
                    if (playerStatus != other.Player_StatusSonic_DropDash) {
                        other.Status = other.Player_StatusJumping;
                    }
                    if (playerAnim != 10 && playerAnim != 7 && playerAnim != 8 && playerAnim != 9) {
                        other.CurrentAnimation = 5;
                    }
                }
            }

            // TODO:
            // Add "continue" to Compiler
            // Add continue to "with"
            // Add do while
            // Add switch statements ("switch", "case")
            // enums?
            //

            if (other.CurrentAnimation != 48)
                other.JumpAbility = 0;
            other.YSpeed = -8.0;
            other.Ground = false;
            other.UseGroundSpeed = 1;
            other.GainScore(10); // This needs to spawn a Score thing too
            Sound.Play(this.SFX_BulbPop);

            this.Active = false;
        }
    }
    event Render() {
        if (!this.OnScreen)
            return;

        var x = Math.Floor(this.X), y = Math.Floor(this.Y);

        Draw.Sprite(this.Sprite, 0, 0, x, y, false, false);
        Draw.Sprite(this.Sprite, 0, 1, x, y, false, false);
        Draw.SetBlendMode(BlendMode_ADD);
        Draw.SetTextureBlend(true);
        Draw.SetBlendColor(1.0, 1.0, 1.0, Static.HexSin(Scene_Frame << 2) * 0.25 + 0.75);
        Draw.Sprite(this.Sprite, 0, 2, x, y, false, false);
        Draw.SetBlendColor(1.0, 1.0, 1.0, 1.0);
        Draw.SetTextureBlend(false);
        Draw.SetBlendMode(BlendMode_NORMAL);

        // LightBulb is layered as:
        // 0, then 1, then 2 as an additive blended sin wave alpha
    }
}
