class LevelSelect {
    event Create() {
        // LSelect/Icons.bin
        // LSelect/Text.bin
        this.Icons = Resources.LoadSprite("Sprites/LSelect/Icons.bin", SCOPE_SCENE);
        this.Text = Resources.LoadSprite("Sprites/LSelect/Text.bin", SCOPE_SCENE);

        this.SFX_MenuAccept = Resources.LoadSound("SoundFX/Global/MenuAccept.wav", SCOPE_GAME);
        this.SFX_MenuBleep = Resources.LoadSound("SoundFX/Global/MenuBleep.wav", SCOPE_GAME);
        this.SFX_MenuWoosh = Resources.LoadSound("SoundFX/Global/MenuWoosh.wav", SCOPE_GAME);

        this.Priority = 13;

        this.LevelArray = [
            {
                "title": "Green Hill Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/GHZ/Scene1.bin",
                    "Stages/GHZ/Scene2.bin",
                ],
            },
            // {
            //     "title": "Blue Spheres",
            //     "labels": [
            //         "1",
            //         "2",
            //     ],
            //     "scenes": [
            //         "Stages/SpecialBS/Scene1.bin",
            //         "Stages/SpecialBS/Scene2.bin",
            //     ],
            // },
            {
                "title": "Chemical Plant Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/CPZ/Scene1.bin",
                    "Stages/CPZ/Scene2.bin",
                ],
            },
            {
                "title": "Studiopolis Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/SPZ1/Scene1.bin",
                    "Stages/SPZ2/Scene1.bin",
                ],
            },
            {
                "title": "Flying Battery Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/FBZ/Scene1.bin",
                    "Stages/FBZ/Scene2.bin",
                ],
            },
            {
                "title": "Press Garden Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/PSZ1/Scene1.bin",
                    "Stages/PSZ2/Scene2.bin",
                ],
            },
            {
                "title": "Stardust Speedway Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/SSZ1/Scene1.bin",
                    "Stages/SSZ2/Scene1.bin",
                ],
            },
            {
                "title": "Hydrocity Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/HCZ/Scene1.bin",
                    "Stages/HCZ/Scene2.bin",
                ],
            },
            {
                "title": "Mirage Saloon Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/MSZ/Scene1K.bin",
                    "Stages/MSZ/Scene2.bin",
                ],
            },
            {
                "title": "Oil Ocean Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/OOZ1/Scene1.bin",
                    "Stages/OOZ2/Scene2.bin",
                ],
            },
            {
                "title": "Lava Reef Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/LRZ1/Scene1.bin",
                    "Stages/LRZ2/Scene1.bin",
                ],
            },
            {
                "title": "Metallic Madness Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/MMZ/Scene1.bin",
                    "Stages/MMZ/Scene2.bin",
                ],
            },
            {
                "title": "Titanic Monarch Zone",
                "labels": [
                    "Act 1",
                    "Act 2",
                ],
                "scenes": [
                    "Stages/TMZ1/Scene1.bin",
                    "Stages/TMZ2/Scene1.bin",
                ],
            },
        ];

        this.SelectedLevel = 0;
        this.ViewYIndex = 0;
        this.ViewY = 0.0;
        this.UsingButtons = true;

        this.FadeOutTimer = -1;

        Static.InitGame();

        Instance.Create("FXFade", 0.0, 0.0);
    }

    event Update() {
        this.ViewY += (this.ViewYIndex - this.ViewY) / 4.0;

        if (this.SelectedLevel < this.ViewYIndex)
            this.ViewYIndex = this.SelectedLevel;
        if (this.SelectedLevel - 6 > this.ViewYIndex)
            this.ViewYIndex = this.SelectedLevel - 6;

        if (this.FadeOutTimer > 0) {
            this.FadeOutTimer--;
            if (this.FadeOutTimer == 0) {
                var act = 1;
                var input = Instance.GetNth("InputManager", 0);
                if (input && (input.Accept || Touch.IsDown(0)))
                    act = 0;

                Scene.Load(this.LevelArray[this.SelectedLevel]["scenes"][act]);
            }
            return;
        }

        var input = Instance.GetNth("InputManager", 0);
        if (!input) return;

        var len = Array.Length(this.LevelArray);

        if (Touch.IsPressed(0)) {
            var vw = Window.GetWidth() * 0.5;
            var vh = Window.GetHeight() * 0.5;
            var tx = Touch.GetX(0);
            var ty = Touch.GetY(0);
            if (tx < vw) {
                if (ty < vh) {
                    input.UpPressed = true;
                }
                else {
                    input.DownPressed = true;
                }
            }
            else {
                if (ty < vh) {
                    input.AcceptPressed = true;
                }
                else {
                    input.Extra1Pressed = true;
                }
            }
        }

        if (input.UpPressed) {
            this.SelectedLevel = (this.SelectedLevel - 1 + len) % len;
            Sound.Play(this.SFX_MenuBleep);
        }
        if (input.DownPressed) {
            this.SelectedLevel = (this.SelectedLevel + 1 + len) % len;
            Sound.Play(this.SFX_MenuBleep);
        }
        if (input.Extra1Pressed) {
            global.SelectedCharacter = (global.SelectedCharacter + 1) % 5;
            Sound.Play(this.SFX_MenuBleep);
        }
        if (input.AcceptPressed) {
            this.FadeOutTimer = 30;
            Sound.Play(this.SFX_MenuAccept);
        }
    }

    event DrawText(x, y, string, anim) {
        var char = 0;
        for (var i = 0, iSz = String.Length(string); i < iSz; i++) {
            char = String.CharAt(string, i);
            if (char >= 48 && char <= 57)
                Draw.Sprite(this.Text, anim, char - 48, x, y, false, false);
            else if (char >= 65 && char <= 90)
                Draw.Sprite(this.Text, anim, char - 65 + 10, x, y, false, false);
            else if (char >= 97 && char <= 122)
                Draw.Sprite(this.Text, anim, char - 97 + 10, x, y, false, false);
            x += 8.0;
        }
    }

    event Render() {
        var vw = View.GetWidth(0);
        var vh = View.GetHeight(0);
        var character = global.SelectedCharacter;
        Draw.Sprite(this.Icons, 3, character + 1, vw - 50.0, vh - 50.0, false, false);

        Draw.Save();
        Draw.Translate(0.0, -this.ViewY * 30.0);
        var levelArray = this.LevelArray;
        for (var i = 0, iSz = Array.Length(levelArray); i < iSz; i++) {
            var map = levelArray[i];
            var y = 18.0 + 12.0 + i * 30.0;
            Draw.Save();
            Draw.Translate(50.0, y);
                Draw.Sprite(this.Icons, 1, i, 0.0, 0.0, false, false);
                this.DrawText(40.0, 0.0, map["title"], this.SelectedLevel == i);
            Draw.Restore();
        }
        Draw.Restore();

        if (this.FadeOutTimer >= 0) {
            var eased = this.FadeOutTimer / 30.0;
            // eased = 1.0 - eased;
            eased = Ease.InOutQuad(eased);
            Draw.SetBlendMode(BlendMode_SUBTRACT);
            Draw.SetBlendColor(
                Math.Clamp(eased * 3.0 - 2.0, 0.0, 1.0),
                Math.Clamp(eased * 3.0 - 1.0, 0.0, 1.0),
                Math.Clamp(eased * 3.0, 0.0, 1.0), 1.0);
            Draw.Rectangle(Math.Floor(CameraX), Math.Floor(CameraY), vw, vh);
            Draw.SetBlendMode(BlendMode_NORMAL);
        }
    }
}
