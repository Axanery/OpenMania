class ForceUnstick {
    event Create() {
        if (this.PropertyExists("filter") && !(this.PropertyGet("filter") & Mode_MANIA)) {
            this.Active = false;
            return;
        }

        this.Priority = DrawGroup_FGHigh_High;

        this.Width = 0;
        this.Height = 0;
        this.BreakClimb = false;
        if (this.PropertyExists("width"))
            this.Width = this.PropertyGet("width");
        if (this.PropertyExists("height"))
            this.Height = this.PropertyGet("height");
        if (this.PropertyExists("breakClimb"))
            this.BreakClimb = this.PropertyGet("breakClimb");


        // NOTE: Tiled Support
        if (this.PropertyExists("Width") &&
            this.PropertyExists("Height")) {
            var width = this.PropertyGet("Width");
            var height = this.PropertyGet("Height");

            this.X += width * 0.5;
            this.Y += height * 0.5;

            this.Width = (width - 16.0) / 16.0;
            this.Height = (height - 16.0) / 16.0;
        }

        this.HitboxW = 16.0 * this.Width + 16.0;
        this.HitboxH = 16.0 * this.Height + 16.0;
        this.HitboxHalfW = this.HitboxW / 2.0;
        this.HitboxHalfH = this.HitboxH / 2.0;

        this.UpdateRegionW = this.HitboxW;
        this.UpdateRegionH = this.HitboxH;
        this.RenderRegionW = this.UpdateRegionW;
        this.RenderRegionH = this.UpdateRegionH;

        this.Visible = false;
    }
    event Update() {
        // Player detection
        with ("Player") {
            if (!this.Active)
                continue;

            var relX = this.X - other.X;
            var relY = this.Y - other.Y;

            if (Math.Abs(relX) > other.HitboxHalfW + this.HitboxHalfW)
                continue;
            if (Math.Abs(relY) > other.HitboxHalfH + this.HitboxHalfH)
                continue;

            this.AngleMode = 0;
            if (other.BreakClimb == 1 && this.Status == this.Player_StatusKnuckles_Climbing) {
                this.AnimationSpeedMult = 1.0;
                this.SetAnimation(49, 2);
                this.Status = this.Player_StatusKnuckles_Falling;
            }
        }
    }
    event Render() {
        if (!this.Visible)
            return;
        if (!this.OnScreen)
            return;

        Draw.Save();
        Draw.Translate(Math.Floor(this.X), Math.Floor(this.Y), 0.0);
            Draw.SetBlendColor(1.0, 0.0, 1.0, 0.7);
            Draw.Rectangle(-this.HitboxHalfW, -this.HitboxHalfH, this.HitboxW, this.HitboxH);
        Draw.Restore();
    }
}
